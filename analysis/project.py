#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 28 13:22:08 2017
@author: Sanam Patel, Derek Mei
"""

from cs591Utilities import *
import numpy as np

# threshold = 0.001
def makeTrombone(freq = 262.5):
    #spectrum = [(130.79427083333334, 0.0028, 0.0), (131.85763888888889, 0.0026, 0.0), (261.5885416666667, 0.0016, 0.0), (262.65190972222223, 0.0028, 0.0), (263.71527777777777, 0.001, 0.0), (391.31944444444446, 0.002, 0.0), (392.3828125, 0.0041, 0.0), (393.44618055555554, 0.0107, 0.0), (394.50954861111114, 0.0069, 0.0), (395.5729166666667, 0.0011, 0.0), (396.63628472222223, 0.0011, 0.0), (397.69965277777777, 0.0011, 0.0), (524.2404513888889, 0.0019, 0.0), (525.3038194444445, 0.0021, 0.0), (652.9079861111111, 0.0011, 0.0), (653.9713541666666, 0.0014, 0.0), (655.0347222222223, 0.0037, 0.0), (656.0980902777778, 0.0056, 0.0), (657.1614583333334, 0.0025, 0.0), (658.2248263888889, 0.0012, 0.0), (784.765625, 0.0011, 0.0), (785.8289930555555, 0.0018, 0.0), (786.8923611111111, 0.0034, 0.0), (787.9557291666666, 0.0024, 0.0), (915.5598958333334, 0.0013, 0.0), (916.6232638888889, 0.0015, 0.0), (917.6866319444445, 0.003, 0.0), (918.75, 0.0028, 0.0), (1046.3541666666667, 0.0019, 0.0), (1047.4175347222222, 0.0025, 0.0), (1048.4809027777778, 0.0046, 0.0), (1049.5442708333333, 0.0066, 0.0), (1050.607638888889, 0.0037, 0.0), (1051.6710069444446, 0.0014, 0.0), (1052.734375, 0.0017, 0.0), (1054.861111111111, 0.001, 0.0), (1178.2118055555557, 0.0011, 0.0), (1179.275173611111, 0.0015, 0.0), (1180.3385416666667, 0.0024, 0.0), (1181.4019097222222, 0.0018, 0.0), (1309.006076388889, 0.001, 0.0), (1310.0694444444446, 0.0012, 0.0), (1311.1328125, 0.0021, 0.0), (1312.1961805555557, 0.0023, 0.0), (1440.8637152777778, 0.0012, 0.0), (1441.9270833333333, 0.0018, 0.0), (1442.990451388889, 0.0021, 0.0), (1444.0538194444446, 0.0011, 0.0), (1704.5789930555557, 0.0012, 0.0), (1705.642361111111, 0.0012, 0.0)]
    spectrum = [(freq, 0.26, 0),(freq*2, 1, 0),(freq*3, 0.19, 0), (freq*4, 0.52, 0), (freq*5, 0.31, 0), (freq*6, .28, 0), (freq*7, 0.62, 0)]
    X = makeSignal(spectrum, 0.6)
    displaySignal(X)
    writeWaveFile('TromboneSimulation.wav', X)
    #return X
    
# threshold = 0.003
def makeTrumpet(freq = 264):
    #spectrum = [(517.1875, 0.0034, 0.0), (517.96875, 0.0035, 0.0), (518.75, 0.0035, 0.0), (519.53125, 0.0038, 0.0), (520.3125, 0.0045, 0.0), (521.09375, 0.003, 0.0), (521.875, 0.0069, 0.0), (523.4375, 0.0079, 0.0), (524.21875, 0.007, 0.0), (525.0, 0.0077, 0.0), (525.78125, 0.0156, 0.0), (526.5625, 0.0154, 0.0), (527.34375, 0.0437, 0.0), (528.125, 0.0506, 0.0), (528.90625, 0.0298, 0.0), (529.6875, 0.0095, 0.0), (530.46875, 0.0156, 0.0), (531.25, 0.0044, 0.0), (532.03125, 0.0086, 0.0), (532.8125, 0.0034, 0.0), (533.59375, 0.0054, 0.0), (534.375, 0.0036, 0.0), (535.15625, 0.003, 0.0), (1051.5625, 0.0041, 0.0), (1053.125, 0.0063, 0.0), (1053.90625, 0.0108, 0.0), (1054.6875, 0.0142, 0.0), (1055.46875, 0.0236, 0.0), (1056.25, 0.024, 0.0), (1057.03125, 0.0136, 0.0), (1057.8125, 0.0094, 0.0), (1058.59375, 0.0082, 0.0), (1059.375, 0.0037, 0.0), (1060.15625, 0.0045, 0.0), (1577.34375, 0.0031, 0.0), (1579.6875, 0.0047, 0.0), (1580.46875, 0.0031, 0.0), (1581.25, 0.0087, 0.0), (1582.03125, 0.0121, 0.0), (1582.8125, 0.0123, 0.0), (1583.59375, 0.0142, 0.0), (1584.375, 0.0126, 0.0), (1585.15625, 0.009, 0.0), (1585.9375, 0.0082, 0.0), (1586.71875, 0.0062, 0.0), (1587.5, 0.0047, 0.0), (1588.28125, 0.0048, 0.0), (2105.46875, 0.0035, 0.0), (2106.25, 0.0031, 0.0), (2107.8125, 0.0059, 0.0), (2108.59375, 0.0052, 0.0), (2109.375, 0.0089, 0.0), (2110.15625, 0.0118, 0.0), (2110.9375, 0.01, 0.0), (2111.71875, 0.008, 0.0), (2112.5, 0.0076, 0.0), (2113.28125, 0.0083, 0.0), (2114.0625, 0.0076, 0.0), (2114.84375, 0.0058, 0.0), (2115.625, 0.0061, 0.0), (2116.40625, 0.005, 0.0), (2117.96875, 0.0032, 0.0), (2632.03125, 0.003, 0.0), (2633.59375, 0.004, 0.0), (2635.15625, 0.0038, 0.0), (2635.9375, 0.006, 0.0), (2636.71875, 0.0058, 0.0), (2637.5, 0.0076, 0.0), (2638.28125, 0.0089, 0.0), (2639.0625, 0.0076, 0.0), (2639.84375, 0.0059, 0.0), (2640.625, 0.0056, 0.0), (2641.40625, 0.0055, 0.0), (2642.1875, 0.0049, 0.0), (2642.96875, 0.0048, 0.0), (2643.75, 0.005, 0.0), (2644.53125, 0.0041, 0.0), (2645.3125, 0.0034, 0.0), (2646.09375, 0.0033, 0.0), (3166.40625, 0.0035, 0.0), (3167.1875, 0.0033, 0.0), (3692.1875, 0.0036, 0.0), (3692.96875, 0.0033, 0.0), (3693.75, 0.0034, 0.0), (3694.53125, 0.0037, 0.0), (3695.3125, 0.0037, 0.0), (3696.09375, 0.0033, 0.0)]
    spectrum = [(freq, 0.01, 0),(freq*2, 1, 0),(freq*4, 0.47, 0), (freq*6, 0.28, 0), (freq*8, 0.23, 0), (freq*10, 0.18, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('TrumpetSimulation.wav', X)
    #return X
    
# threshold = 0.001
def makeFrenchHorn(freq = 263.5):
    #spectrum = [(262.3206967213115, 0.0012, 0.0), (262.9482581967213, 0.0019, 0.0), (263.57581967213116, 0.0055, 0.0), (264.203381147541, 0.0011, 0.0), (523.3862704918033, 0.0013, 0.0), (524.0138319672132, 0.0015, 0.0), (524.641393442623, 0.0011, 0.0), (525.2689549180328, 0.0034, 0.0), (525.8965163934427, 0.0021, 0.0), (526.5240778688525, 0.0159, 0.0), (527.1516393442623, 0.0154, 0.0), (527.7792008196722, 0.0013, 0.0), (528.406762295082, 0.0021, 0.0), (529.0343237704918, 0.0024, 0.0), (529.6618852459017, 0.0011, 0.0), (530.2894467213115, 0.0011, 0.0), (790.0998975409836, 0.0025, 0.0), (790.7274590163935, 0.0022, 0.0), (1053.6757172131147, 0.0023, 0.0), (1317.251536885246, 0.0013, 0.0)]
    spectrum = [(freq, 0.35, 0),(freq*2, 1, 0),(freq*3, 0.16, 0), (freq*4, 0.14, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('FrenchHornSimulation.wav', X)

# threshold = 0.002
def makeViolin(freq = 258.5):
    #spectrum = [(131.81751179245282, 0.0029, 0.0), (132.17865566037736, 0.0024, 0.0), (260.02358490566036, 0.0027, 0.0), (260.3847287735849, 0.006, 0.0), (260.74587264150944, 0.0103, 0.0), (261.10701650943395, 0.0121, 0.0), (261.46816037735846, 0.009, 0.0), (261.829304245283, 0.0045, 0.0), (262.19044811320754, 0.0033, 0.0), (262.55159198113205, 0.0058, 0.0), (262.9127358490566, 0.0054, 0.0), (263.2738797169811, 0.0196, 0.0), (263.63502358490564, 0.0336, 0.0), (263.9961674528302, 0.0229, 0.0), (264.3573113207547, 0.0107, 0.0), (264.71845518867923, 0.0055, 0.0), (265.8018867924528, 0.0034, 0.0), (266.16303066037733, 0.0064, 0.0), (266.5241745283019, 0.0063, 0.0), (266.8853183962264, 0.0033, 0.0), (392.56338443396226, 0.002, 0.0), (392.92452830188677, 0.0022, 0.0), (395.09139150943395, 0.0027, 0.0), (395.45253537735846, 0.0048, 0.0), (395.813679245283, 0.0036, 0.0), (396.17482311320754, 0.0027, 0.0), (524.0197523584906, 0.0025, 0.0), (524.3808962264151, 0.0034, 0.0), (524.7420400943396, 0.0042, 0.0), (525.1031839622641, 0.0037, 0.0), (525.4643278301887, 0.0027, 0.0), (525.8254716981132, 0.0021, 0.0), (526.5477594339623, 0.0033, 0.0), (526.9089033018868, 0.0034, 0.0), (527.2700471698113, 0.0063, 0.0), (527.6311910377358, 0.0058, 0.0), (527.9923349056604, 0.0044, 0.0), (528.3534787735849, 0.003, 0.0), (528.7146226415094, 0.0021, 0.0), (529.4369103773585, 0.0021, 0.0), (529.798054245283, 0.0038, 0.0), (530.1591981132075, 0.0043, 0.0), (530.5203419811321, 0.0031, 0.0), (530.8814858490566, 0.0021, 0.0)]
    spectrum = [(freq, 0.08, 0),(freq*2, 1, 0),(freq*3, 0.15, 0), (freq*4, .2, 0), (freq*5, .08, 0), (freq*6, .05, 0), (freq*7, .05, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('ViolinSimulation.wav', X)
    #return X 
  
# threshold = 0.001
def makeCello(freq = 258.5):
    #spectrum = [(126.7109375, 0.0014, 0.0), (127.09375, 0.0011, 0.0), (127.4765625, 0.0012, 0.0), (127.859375, 0.0035, 0.0), (128.2421875, 0.0072, 0.0), (128.625, 0.0245, 0.0), (129.0078125, 0.0399, 0.0), (129.390625, 0.0243, 0.0), (129.7734375, 0.0059, 0.0), (130.15625, 0.0053, 0.0), (130.5390625, 0.0014, 0.0), (130.921875, 0.0011, 0.0), (131.3046875, 0.0011, 0.0), (131.6875, 0.002, 0.0), (132.0703125, 0.0013, 0.0), (257.25, 0.0013, 0.0), (257.6328125, 0.0035, 0.0), (258.015625, 0.0063, 0.0), (258.3984375, 0.0046, 0.0), (258.78125, 0.0018, 0.0), (259.1640625, 0.001, 0.0), (385.4921875, 0.0011, 0.0), (385.875, 0.0014, 0.0), (386.2578125, 0.0018, 0.0), (386.640625, 0.0024, 0.0), (387.0234375, 0.0031, 0.0), (387.40625, 0.0024, 0.0), (387.7890625, 0.0016, 0.0), (514.8828125, 0.001, 0.0), (515.265625, 0.0012, 0.0), (515.6484375, 0.0015, 0.0), (516.03125, 0.0019, 0.0), (516.4140625, 0.002, 0.0), (516.796875, 0.0019, 0.0), (517.1796875, 0.0013, 0.0), (643.125, 0.001, 0.0), (643.5078125, 0.0016, 0.0), (643.890625, 0.0013, 0.0), (644.2734375, 0.0013, 0.0), (644.65625, 0.0015, 0.0), (645.0390625, 0.0015, 0.0), (645.421875, 0.0015, 0.0), (645.8046875, 0.0016, 0.0), (646.1875, 0.0012, 0.0), (1159.5390625, 0.0012, 0.0), (1159.921875, 0.0011, 0.0)]
    spectrum = [(freq, 1, 0),(freq*2, 0.19, 0),(freq*3, 0.13, 0), (freq*4, .1, 0), (freq*5, .1, 0), (freq*6, 0.025, 0), (freq*7, 0.025, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('CelloSimulation.wav', X)      

# threshold = 0.001
def makeGuitar(freq = 258.5):
    #spectrum = [(11.468876518218623, 0.0012, 0.0), (12.24380060728745, 0.0012, 0.0), (15.808451417004049, 0.0011, 0.0), (15.963436234817815, 0.0017, 0.0), (16.11842105263158, 0.0012, 0.0), (16.42839068825911, 0.0012, 0.0), (17.823254048582996, 0.0011, 0.0), (22.62778340080972, 0.0017, 0.0), (22.782768218623485, 0.001, 0.0), (23.86766194331984, 0.0011, 0.0), (24.4876012145749, 0.0012, 0.0), (24.642586032388664, 0.0014, 0.0), (130.3422317813765, 0.001, 0.0), (130.4972165991903, 0.0014, 0.0), (130.65220141700405, 0.0032, 0.0), (130.80718623481783, 0.0042, 0.0), (130.9621710526316, 0.0021, 0.0), (131.11715587044534, 0.0014, 0.0), (260.684463562753, 0.001, 0.0), (260.8394483805668, 0.0011, 0.0), (260.9944331983806, 0.0012, 0.0), (261.1494180161944, 0.0013, 0.0), (261.3044028340081, 0.0015, 0.0), (261.4593876518219, 0.0018, 0.0), (261.61437246963567, 0.0021, 0.0), (261.7693572874494, 0.0025, 0.0), (261.9243421052632, 0.0031, 0.0), (262.07932692307696, 0.0036, 0.0), (262.2343117408907, 0.0035, 0.0), (262.3892965587045, 0.0029, 0.0), (262.54428137651826, 0.0022, 0.0), (262.699266194332, 0.0017, 0.0), (262.85425101214577, 0.0014, 0.0), (263.00923582995955, 0.0013, 0.0), (263.1642206477733, 0.0011, 0.0), (263.31920546558706, 0.001, 0.0), (392.2665738866397, 0.001, 0.0), (392.42155870445345, 0.0013, 0.0), (392.57654352226723, 0.0019, 0.0), (392.731528340081, 0.0026, 0.0), (392.88651315789474, 0.0047, 0.0), (393.0414979757085, 0.0034, 0.0), (393.1964827935223, 0.0019, 0.0)]
    spectrum = [(freq, 0.4, 0),(freq*2, 0.8, 0),(freq*3, 0.7, 0), (freq*4, 1, 0), (freq*5, .2, 0), (freq*6, 0.02, 0), (freq*7, 0.05, 0)]
    X = makeSignal(spectrum, 5)
    displaySignal(X)
    writeWaveFile('GuitarSimulation.wav', X)
  
# threshold = 0.002
def makeClarinet(freq = 258.5):
    #spectrum = [(257.03125, 0.0029, 0.0), (257.94270833333337, 0.0036, 0.0), (258.8541666666667, 0.0046, 0.0), (259.765625, 0.0035, 0.0), (260.67708333333337, 0.0136, 0.0), (261.5885416666667, 0.05, 0.0), (262.5, 0.002, 0.0), (263.41145833333337, 0.0108, 0.0), (264.3229166666667, 0.0081, 0.0), (265.234375, 0.0044, 0.0), (782.03125, 0.0032, 0.0), (782.9427083333334, 0.0039, 0.0), (783.8541666666667, 0.0178, 0.0), (784.765625, 0.0255, 0.0), (785.6770833333334, 0.0061, 0.0), (786.5885416666667, 0.0087, 0.0), (787.5, 0.0073, 0.0), (788.4114583333334, 0.0028, 0.0), (791.1458333333334, 0.002, 0.0), (1045.4427083333335, 0.0021, 0.0), (1046.3541666666667, 0.0024, 0.0), (1305.2083333333335, 0.0031, 0.0), (1306.1197916666667, 0.0058, 0.0), (1307.03125, 0.0114, 0.0), (1307.9427083333335, 0.0085, 0.0), (1308.8541666666667, 0.0063, 0.0), (1309.765625, 0.0039, 0.0), (1310.6770833333335, 0.004, 0.0), (1567.7083333333335, 0.0025, 0.0), (1568.6197916666667, 0.0045, 0.0), (1569.53125, 0.0029, 0.0), (1570.4427083333335, 0.0029, 0.0), (1572.265625, 0.002, 0.0), (1828.3854166666667, 0.0031, 0.0), (1829.296875, 0.0043, 0.0), (1830.2083333333335, 0.0052, 0.0), (1831.1197916666667, 0.0025, 0.0), (1832.03125, 0.0042, 0.0), (1832.9427083333335, 0.0024, 0.0), (1833.8541666666667, 0.0024, 0.0), (2351.5625, 0.002, 0.0), (2352.4739583333335, 0.0023, 0.0), (2874.7395833333335, 0.0021, 0.0)]
    spectrum = [(freq, 1, 0),(freq*3, .75, 0),(freq*5, .5, 0), (freq*7, .14, 0), (freq*9, .5, 0), (freq*11, .12, 0), (freq*13, .17, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('ClarinetSimulation.wav', X)


# threshold = 0.001
def makeFlute(freq = 261.8):
    #spectrum = [(14.790482954545453, 0.0011, 0.0), (16.530539772727273, 0.001, 0.0), (17.40056818181818, 0.0011, 0.0), (21.750710227272727, 0.0011, 0.0), (260.1384943181818, 0.0012, 0.0), (261.0085227272727, 0.0027, 0.0), (261.8785511363636, 0.0039, 0.0), (522.0170454545454, 0.0012, 0.0), (522.8870738636364, 0.003, 0.0), (523.7571022727273, 0.003, 0.0), (784.765625, 0.0017, 0.0), (785.6356534090909, 0.0015, 0.0), (789.9857954545454, 0.0012, 0.0), (1044.9041193181818, 0.0013, 0.0), (1046.6441761363635, 0.0022, 0.0), (1047.5142045454545, 0.0022, 0.0), (1050.1242897727273, 0.0013, 0.0), (1051.864346590909, 0.0025, 0.0), (1052.734375, 0.0014, 0.0), (1308.5227272727273, 0.0013, 0.0), (1309.3927556818182, 0.0011, 0.0), (1312.8728693181818, 0.0016, 0.0), (1313.7428977272727, 0.0019, 0.0), (1318.0930397727273, 0.0012, 0.0)]
    spectrum = [(17.4, .282, 0), (freq, 1, 0),(freq*2, .75, 0),(freq*3, .435, 0), (freq*4, .685, 0), (freq*5, .5, 0), (freq*6, .025, 0), (freq*7, .025, 0), (freq*8, .025, 0), (freq*9, .03, 0)]
    X = makeSignal(spectrum, 1)
    displaySignal(X)
    writeWaveFile('FluteSimulation.wav', X)
  
# threshold = 0.001
def makeOboe(freq = 258.5):
    #spectrum = [(11.69704861111111, 0.0016, 0.0), (12.760416666666668, 0.0013, 0.0), (15.950520833333334, 0.0024, 0.0), (22.330729166666668, 0.001, 0.0), (261.5885416666667, 0.0014, 0.0), (262.65190972222223, 0.0067, 0.0), (263.71527777777777, 0.0081, 0.0), (264.7786458333333, 0.0012, 0.0), (267.96875, 0.0016, 0.0), (526.3671875, 0.0015, 0.0), (790.0824652777778, 0.0012, 0.0), (1049.5442708333333, 0.0012, 0.0), (1052.734375, 0.0046, 0.0), (1053.7977430555557, 0.0034, 0.0), (1054.861111111111, 0.0016, 0.0), (1058.0512152777778, 0.0014, 0.0), (1310.0694444444446, 0.0011, 0.0), (1311.1328125, 0.0022, 0.0), (1312.1961805555557, 0.0025, 0.0), (1313.259548611111, 0.0019, 0.0), (1314.3229166666667, 0.0022, 0.0), (1315.3862847222222, 0.0032, 0.0), (1316.4496527777778, 0.0097, 0.0), (1317.5130208333333, 0.0023, 0.0), (1318.576388888889, 0.0034, 0.0), (1319.6397569444446, 0.0014, 0.0), (1320.703125, 0.0034, 0.0), (1321.7664930555557, 0.0016, 0.0), (1322.829861111111, 0.0013, 0.0), (1842.8168402777778, 0.002, 0.0), (1844.943576388889, 0.0011, 0.0), (1847.0703125, 0.001, 0.0)]
    spectrum = [(freq, 1, 0),(freq*3, .75, 0),(freq*5, .5, 0), (freq*7, .14, 0), (freq*9, .5, 0), (freq*11, .12, 0), (freq*13, .17, 0)]
    X = makeSignal(spectrum, 0.8)
    displaySignal(X)
    writeWaveFile('OboeSimulation.wav', X)
    
# prints peaks of spectrum       
def findPeaks(spectrum):
    maxPeak = 0.0
    maxPeakFreq = 0.0
    count = 1
    for i in range(1, len(spectrum) - 1):
        f, a, p = spectrum[i]
        f1, a1, p1 = spectrum[i - 1]
        f2, a2, p2 = spectrum[i + 1]
        if a > a1 and a > a2:
            print("count = " + str(count))
            print("freq = " + str(f))
            print("amp = " + str(a))
            count += 1
            if a > maxPeak:
                maxPeak = a
                maxPeakFreq = f
    print("max peak = " + str(maxPeakFreq))            
    
def applyCompleteASR(X,A,S,L,R,H):
    Y = [0] * len(X) 
    A = A * SR      # convert seconds to sample numbers
    S = S * SR
    R = R * SR    
    for k in range(len(X)):
        if (k < A):
            Y[k] = int(X[k]*L*k/A)
        elif (k < A+S):
            Y[k] = int(X[k]*L)
        elif (k < A+S+R):
            Y[k] = int(X[k]*(L*(2.0**(-(k-A-S)/(SR*H)))))
        else:
            Y[k] = 0
    return Y
  
# threshold = 0.001
def makeTromboneASR(freq = 130.813):
    spectrum = [(freq, 0.26, 0),(freq*2, 1, 0),(freq*3, 0.19, 0), (freq*4, 0.52, 0), (freq*5, 0.31, 0), (freq*6, .28, 0), (freq*7, 0.62, 0)]
    X = makeSignal(spectrum, 1.2)
    X = applyCompleteASR(X, 0.1, 0.3, 0.15, 0.6, 0.15)
    displaySignal(X)
    writeWaveFile('trombone-asr.wav', X)
    
# threshold = 0.003
def makeTrumpetASR(freq = 264):
    spectrum = [(freq, 0.01, 0),(freq*2, 1, 0),(freq*4, 0.47, 0), (freq*6, 0.28, 0), (freq*8, 0.23, 0), (freq*10, 0.18, 0)]
    X = makeSignal(spectrum, 1)
    X = applyCompleteASR(X, 0.02, 0.7, 0.5, 0.3, 0.15)
    displaySignal(X)
    writeWaveFile('TrumpetSimulationASR.wav', X)
    
# threshold = 0.001
def makeFrenchHornASR(freq = 263.2):
    spectrum = [(freq, 0.35, 0),(freq*2, 1, 0),(freq*3, 0.16, 0), (freq*4, 0.14, 0)]
    X = makeSignal(spectrum, 1.2)
    X = applyCompleteASR(X, 0.1, 0.6, 0.3, 0.5, 0.15)
    displaySignal(X)
    writeWaveFile('french-horn-asr.wav', X)
    
# threshold = 0.002
def makeClarinetASR(freq = 258.5):
    spectrum = [(freq, 1, 0),(freq*3, .75, 0),(freq*5, .5, 0), (freq*7, .14, 0), (freq*9, .5, 0), (freq*11, .12, 0), (freq*13, .17, 0)]
    X = makeSignal(spectrum, 1)
    X = applyCompleteASR(X, 0.02, 0.8, .4, 0.2, .04)
    displaySignal(X)
    writeWaveFile('ClarinetSimulationASR.wav', X)
    
# threshold = 0.002
def makeFluteASR(freq = 261.8): 
    spectrum = [(17.4, .282, 0), (freq, 1, 0),(freq*2, .75, 0),(freq*3, .435, 0), (freq*4, .685, 0), (freq*5, .5, 0), (freq*6, .025, 0), (freq*7, .025, 0), (freq*8, .025, 0), (freq*9, .03, 0)] #instead of inputting the array we got from listening to the original sound, I just made my own off the spectrum of a clarinet sound
    X = makeSignal(spectrum, 1)
    X = applyCompleteASR(X, 0.01, 0.8, .1, 0.2, .04)
    displaySignal(X)
    writeWaveFile('FluteSimulationASR.wav', X)

# threshold = 0.002
def makeOboeASR(freq = 258.5):
    spectrum = [(freq, 1, 0),(freq*3, .75, 0),(freq*5, .5, 0), (freq*7, .14, 0), (freq*9, .5, 0), (freq*11, .12, 0), (freq*13, .17, 0)] #instead of inputting the array we got from listening to the original sound, I just made my own off the spectrum of a clarinet sound
    X = makeSignal(spectrum, 1) 
    X = applyCompleteASR(X, 0.02, 0.8, .4, 0.2, .04)
    displaySignal(X)
    writeWaveFile('OboeSimulationASR.wav', X)
    
# threshold = 0.002
def makeViolinASR(freq = 258.5):
    spectrum = [(freq, 0.08, 0),(freq*2, 1, 0),(freq*3, 0.15, 0), (freq*4, .2, 0), (freq*5, .08, 0), (freq*6, .05, 0), (freq*7, .05, 0)]
    X = makeSignal(spectrum, 1)
    X = applyCompleteASR(X, 0.1, 0.8, 0.5, 0.3, 0.15)
    displaySignal(X)
    writeWaveFile('ViolinSimulationASR.wav', X) 
  
# threshold = 0.001
def makeCelloASR(freq = 258.5):
    spectrum = [(freq, 1, 0),(freq*2, 0.19, 0),(freq*3, 0.13, 0), (freq*4, .1, 0), (freq*5, .1, 0), (freq*6, 0.025, 0), (freq*7, 0.025, 0)]
    X = makeSignal(spectrum, 1)
    X = applyCompleteASR(X, 0.3, 0.3, 0.4, 0.4, 0.1)
    displaySignal(X)
    writeWaveFile('CelloSimulationASR.wav', X)  

# threshold = 0.001
def makeGuitarASR(freq = 258.5):
    spectrum = [(freq, 0.4, 0),(freq*2, 0.8, 0),(freq*3, 0.7, 0), (freq*4, 1, 0), (freq*5, .2, 0), (freq*6, 0.02, 0), (freq*7, 0.05, 0)]
    X = makeSignal(spectrum, 5)
    X = applyCompleteASR(X, 0.1, 0.1, 0.3, 3, 0.15)
    displaySignal(X)
    writeWaveFile('guitar-asr.wav', X)